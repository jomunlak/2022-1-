

list와 numpy
 numpy는 list의 확장판이다.
 주로 대용량의 수치 데이터 처리를 위해 만들어졌다.

list 
 - 데이터를 담는 그릇, 어떤 타입이라도 리스트에 넣을 수 있다.

툴들이 표 형태의 입력을 받도록 설계되어있다.

numpy
 원하는 데이터를 잘라내기 쉽다
 데이터 처리 속도가 빠르다


import numpy as np
l = [[1,2,3],[4,5,6,],[7,8,9],[10,11,12]]
a = np.array(l)
array() 리스트 데이터를 numpy 형태로 바꿔주는 메서드

리스트 슬라이싱 중 numpy에 추가된 내용 >> 열 번호를 통해서 열 슬라이싱 가능 !!!!
array[(시작 행 번호) : (끝 행 번호 + 1) : (스텝(시작 번호에서부터 시작)) , [찾아올 열 번호의 리스트]]

ex)
>>>> a[:,0] <<<<
앞은 행, 뒤는 열 번호를 지정하는것
n:m << n 이상 m 미만의 행, 
0 << 첫 번째 열을 뽑으시오

Q. array의 중간부터 끝까지, 앞에서부터 세 개의 열을 출력하시오
	A. a[len(a)//2:, 0,1,2]

b =a[:2,:2] # b는 a의 참조(referrence)가 된다. b의 내용이 바뀌면 a의 내용도 바뀜
print(b)
result : ([[1, 2],
           [4, 5]])

numpy에서 주의할 점
- 주로 실수를 다룬다, 문자열을 다루고 싶으면 실수로 변환해서 사용
- 하나의 numpy 데이터에서는 한 가지 타입만 쓸 수 있다.
- 표 형태의 데이터만 다룬다. (모든 행의 열 개수가 같아야 한다.)
- 3차원 데이터를 다룰 수 있다.

넘파이 생성 함수들
np.array()
np.zeros(), np.ones()	ex) np.zeros([10, 10])	모든 형태 가능
np.arange()		ex) np.arange(1, 100, 1)	한 줄만 가능, 시작번호 끝번호 스텝 지정 가능
np.eye()			ex) np.eye(10)		정사각형만 가능
np.random ~			

넘파이의 기본 자료형은 '실수형'
a.dtype 어레이의 데이터 타입을 반환한다.

array는 항목별로 연산이 일어난다
a = np.zeros([10,10])
a + 5

result>>>
array([[5., 5., 5., 5., 5., 5., 5., 5., 5., 5.],
       [5., 5., 5., 5., 5., 5., 5., 5., 5., 5.],
       [5., 5., 5., 5., 5., 5., 5., 5., 5., 5.],
       [5., 5., 5., 5., 5., 5., 5., 5., 5., 5.],
       [5., 5., 5., 5., 5., 5., 5., 5., 5., 5.],
       [5., 5., 5., 5., 5., 5., 5., 5., 5., 5.],
       [5., 5., 5., 5., 5., 5., 5., 5., 5., 5.],
       [5., 5., 5., 5., 5., 5., 5., 5., 5., 5.],
       [5., 5., 5., 5., 5., 5., 5., 5., 5., 5.],
       [5., 5., 5., 5., 5., 5., 5., 5., 5., 5.]])


넘파이 기본 작업절차
1. 필요한 데이터를 가져와 list에 삽입
2. 생성된 list를 array로 변환
3. 데이터 분석

array 모양 바꾸기
reshape() 
 행과 열의 개수를 바꾼다.
 a = np.arange(100).reshape(10, 10)
ravel()
 1차원으로 풀어준다
T
 행과 열을 뒤집는다(길이와 값 전부)
shape()
 행렬 크기를 튜플 형태로 반환한다.

그리기(matplotlib)
import matplotlib.pyplot as plt

plot
 꺾은선 그래프를 그림
 plt.plot([1,2,3,4,5,10])
imshow
 색 그라데이션으로 수치를 표현한다
 plt.imshow(a)


array 비교식
 비교연산자 < > >= <= == !=
  >>  array 항목별로 True/False 출력
 행렬의 개수(shape)가 같으면 두 array 비교 가능
 연산시 True는 1, False는 0으로 계산


파일에서 읽어오기
 csv 파일 : 데이터를 텍스트로 저장한 파일. 쉼표로 항목을 구분함
 np.loadtxt() : 파일에서 읽어오는 메서드

 















연습문제
- 테두리만 1이고 나머지는 0인 5*5 어레이를 만드시오
- 위의 값을 모두 뒤집으시오
- 값이 모두 0인 5*5 어레이를 만들고, 





















